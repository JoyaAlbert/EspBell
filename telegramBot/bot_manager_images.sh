#!/bin/bash
# Script para gestionar el bot con servidor de im√°genes

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BOT_SCRIPT="$SCRIPT_DIR/main.py"
PID_FILE="$SCRIPT_DIR/bot.pid"
IMAGE_SERVER_PID_FILE="$SCRIPT_DIR/image_server.pid"

case "$1" in
    start)
        echo "üöÄ Iniciando bot de Telegram con servidor de im√°genes..."
        
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p $PID > /dev/null 2>&1; then
                echo "‚ùå El bot ya est√° ejecut√°ndose (PID: $PID)"
                exit 1
            else
                echo "üßπ Eliminando archivo PID obsoleto..."
                rm -f "$PID_FILE"
            fi
        fi
        
        cd "$SCRIPT_DIR"
        
        # Instalar dependencias si es necesario
        if [ ! -d "venv" ]; then
            echo "üì¶ Creando entorno virtual..."
            python3 -m venv venv
        fi
        
        # Activar entorno virtual
        source venv/bin/activate
        
        # Instalar/actualizar dependencias
        echo "üìã Instalando dependencias..."
        pip install -r requirements.txt
        
        # Crear carpeta de im√°genes
        mkdir -p ./images
        
        # Iniciar bot en segundo plano
        echo "‚ñ∂Ô∏è Iniciando bot..."
        nohup python3 "$BOT_SCRIPT" > bot.log 2>&1 &
        
        # Guardar PID
        echo $! > "$PID_FILE"
        
        sleep 2
        
        if ps -p $(cat "$PID_FILE") > /dev/null 2>&1; then
            echo "‚úÖ Bot iniciado correctamente (PID: $(cat $PID_FILE))"
            echo "üìã Log: tail -f $SCRIPT_DIR/bot.log"
            echo "üñºÔ∏è Servidor de im√°genes: http://localhost:8080/status"
        else
            echo "‚ùå Error iniciando el bot. Revisa el log:"
            echo "   tail -f $SCRIPT_DIR/bot.log"
            rm -f "$PID_FILE"
            exit 1
        fi
        ;;
        
    stop)
        echo "üõë Deteniendo bot..."
        
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p $PID > /dev/null 2>&1; then
                kill $PID
                echo "‚è≥ Esperando que el bot se detenga..."
                sleep 3
                
                if ps -p $PID > /dev/null 2>&1; then
                    echo "‚ö†Ô∏è Forzando cierre del bot..."
                    kill -9 $PID
                fi
                
                rm -f "$PID_FILE"
                echo "‚úÖ Bot detenido"
            else
                echo "‚ùå El bot no est√° ejecut√°ndose"
                rm -f "$PID_FILE"
            fi
        else
            echo "‚ùå No se encontr√≥ archivo PID. El bot no est√° ejecut√°ndose."
        fi
        ;;
        
    restart)
        echo "üîÑ Reiniciando bot..."
        $0 stop
        sleep 2
        $0 start
        ;;
        
    status)
        echo "üìä Estado del bot:"
        
        if [ -f "$PID_FILE" ]; then
            PID=$(cat "$PID_FILE")
            if ps -p $PID > /dev/null 2>&1; then
                echo "‚úÖ Bot ejecut√°ndose (PID: $PID)"
                echo "üìã Log: tail -f $SCRIPT_DIR/bot.log"
                
                # Verificar servidor de im√°genes
                if curl -s http://localhost:8080/status > /dev/null 2>&1; then
                    echo "üñºÔ∏è Servidor de im√°genes: ‚úÖ FUNCIONANDO"
                    echo "   URL: http://localhost:8080/status"
                else
                    echo "üñºÔ∏è Servidor de im√°genes: ‚ùå NO RESPONDE"
                fi
                
                # Mostrar informaci√≥n de im√°genes
                if [ -d "./images" ]; then
                    IMAGE_COUNT=$(ls -1 ./images | wc -l)
                    echo "üì∏ Im√°genes almacenadas: $IMAGE_COUNT"
                    
                    if [ $IMAGE_COUNT -gt 0 ]; then
                        echo "üìÅ Carpeta de im√°genes: $SCRIPT_DIR/images"
                        echo "   √öltimas im√°genes:"
                        ls -lt ./images | head -5 | tail -n +2 | while read line; do
                            echo "   - $(echo $line | awk '{print $9}') ($(echo $line | awk '{print $6, $7, $8}'))"
                        done
                    fi
                fi
            else
                echo "‚ùå Bot no est√° ejecut√°ndose (PID obsoleto)"
                rm -f "$PID_FILE"
            fi
        else
            echo "‚ùå Bot no est√° ejecut√°ndose"
        fi
        ;;
        
    logs)
        echo "üìã Mostrando logs del bot..."
        if [ -f "$SCRIPT_DIR/bot.log" ]; then
            tail -f "$SCRIPT_DIR/bot.log"
        else
            echo "‚ùå No se encontr√≥ archivo de log"
        fi
        ;;
        
    clean-images)
        echo "üßπ Limpiando im√°genes antiguas..."
        
        if [ -d "./images" ]; then
            BEFORE_COUNT=$(ls -1 ./images | wc -l)
            
            # Eliminar im√°genes m√°s antiguas de 24 horas
            find ./images -type f -mtime +1 -delete
            
            AFTER_COUNT=$(ls -1 ./images | wc -l)
            DELETED=$((BEFORE_COUNT - AFTER_COUNT))
            
            echo "‚úÖ Limpieza completada:"
            echo "   Im√°genes antes: $BEFORE_COUNT"
            echo "   Im√°genes despu√©s: $AFTER_COUNT"
            echo "   Im√°genes eliminadas: $DELETED"
        else
            echo "‚ùå No existe la carpeta de im√°genes"
        fi
        ;;
        
    *)
        echo "ü§ñ Gestor del Bot de Telegram con Servidor de Im√°genes"
        echo ""
        echo "Uso: $0 {start|stop|restart|status|logs|clean-images}"
        echo ""
        echo "Comandos:"
        echo "  start         - Iniciar bot y servidor de im√°genes"
        echo "  stop          - Detener bot y servidor"
        echo "  restart       - Reiniciar bot"
        echo "  status        - Ver estado del bot y servidor"
        echo "  logs          - Mostrar logs en tiempo real"
        echo "  clean-images  - Limpiar im√°genes antiguas manualmente"
        echo ""
        echo "Caracter√≠sticas:"
        echo "  üì∏ Servidor de im√°genes en puerto 8080"
        echo "  üóëÔ∏è Limpieza autom√°tica cada 24 horas"
        echo "  üîó URLs locales para im√°genes privadas"
        echo "  üì± Soporte para im√°genes desde Telegram"
        echo ""
        exit 1
        ;;
esac
